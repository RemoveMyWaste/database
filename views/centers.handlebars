{{error}}


{{#each centers}}
<h2 id="name">{{name}}</h2>
<p>
<span id="street_number">{{street_number}}</span>
<span id="street_direction">{{street_direction}}</span>
<span id="street_name">{{street_name}}</span>
<span id="street_type">{{street_type}}</span>,
<span id="city">{{city}}</span>,
<span id="state">{{state}}</span>
<span id="zip">{{zip}}</span>
</p>
{{/each}}

<div id="mapid"></div>

<div id="demo"></div>

<h3>Operating Hours:</h3>

<table>
    <tr>
        <th>day of week</td>
        <th>time open</td>
        <th>time closed</td>
    </tr>
    {{#each schedules}}
    <tr>
        <td>{{day_of_week}}</td>
        <td>{{time_open}}</td>
        <td>{{time_closed}}</td>
    </tr>
    {{/each}}
</table>

<div tabindex="0" class="select" id="maps">Open in Google Maps</div>
<div tabindex="0" class="select" onclick="location.href='/issues'">Report Incorrect Information</div>
<h3>Materials Accepted at this Center:</h3>

{{#each materials}}
<p>{{name}}</p>
{{/each}}

    <script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCPb7MDJh3zsvepb2OMrjr0E0R5wk9Bdqw&callback=initMap">
    </script>
<script>
let maps = document.getElementById("maps");
let query = document.getElementById("name").innerHTML;
maps.onclick = function() {
    location.href='https://www.google.com/maps/search/?api=1&query=' + query;
}

let street_number = document.getElementById("street_number").innerHTML;
let street_direction = document.getElementById("street_direction").innerHTML;
let street_name = document.getElementById("street_name").innerHTML;
let street_type = document.getElementById("street_type").innerHTML;
let city = document.getElementById("city").innerHTML;
let state = document.getElementById("state").innerHTML;
let zip = document.getElementById("zip").innerHTML;
apiAddress = street_number + "+" + street_direction + "+" + street_name + "+" + street_type + "+"  + city + "+" + state + "+" + zip;

let lat = -1;
let lng = -1;

function initMap() {
    var geocoder = new google.maps.Geocoder();
    geocodeAddress(geocoder);
}

function geocodeAddress(geocoder) {
    var address = apiAddress;
    console.log("apiAddress: " + apiAddress);
    geocoder.geocode({'address': address}, function(results, status) {
        if (status === 'OK') {
            lat = results[0].geometry.location.lat();
            lng = results[0].geometry.location.lng();
            console.log("lat:", lat);
            console.log("lng:", lng);
// initial map (portland)
buildMap(lat, lng);
var mymap = L.map('mapid').setView([lat, lng], 11);
        } else {
            console.err('Geocode was not successful for the following reason: ' + status);
        }
    });
}


// initial map (portland)
//buildMap(45.4970, -122.6365);
//var mymap = L.map('mapid').setView([45.4970, -122.6365], 11);

// global JSON variable because I'm not clever enough to return variables...
var responseGlobal;

// openWeatherMap api token
var apikey = '6e819dbc5bef4cc4627f4c655841b090';

// resets location to portland
//document.getElementById('reset').addEventListener('click', function(event){
//    updatePlace("Portland");
//    event.preventDefault();
//});


// builds the map and layer
function buildMap(lat,lon)  {
    document.getElementById('mapid').innerHTML = "<div id='map' style='width: 100%; height: 100%;'></div>";
    var newMap = new L.Map('map');
    newMap.setView(new L.LatLng(lat,lon), 14);
    L.marker([lat, lon]).addTo(newMap);

    mapboxLayer = L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {
attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
maxZoom: 18,
id: 'mapbox.streets',
accessToken: 'pk.eyJ1IjoibGJlY2ttYW4zMTQiLCJhIjoiY2poNDlhZ3hwMHh5cDJ3bnhjcXQ5Nzh2cCJ9.eI1TFtPk7kG7k1YHbf4y0A'
});

var osmUrl = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',
osmAttribution = 'Map data © <a href="https://openstreetmap.org">OpenStreetMap</a> contributors,' +
' <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>',
osmLayer = new L.TileLayer(osmUrl, {maxZoom: 12, attribution: osmAttribution});

// change to osmLayer to use open street maps layer
newMap.addLayer(mapboxLayer);
}

</script>
